/**
 * This class is generated by jOOQ
 */
package com.nextcont.ecm.fileengine.persistence.jooq.tables.records;


import com.nextcont.ecm.fileengine.persistence.jooq.tables.FastdfsFilerecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FastdfsFilerecordRecord extends UpdatableRecordImpl<FastdfsFilerecordRecord> implements Record11<String, String, String, String, String, Timestamp, Timestamp, String, String, String, String> {

	private static final long serialVersionUID = -1704668676;

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.globalId</code>.
	 */
	public void setGlobalid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.globalId</code>.
	 */
	public String getGlobalid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.fid</code>.
	 */
	public void setFid(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.fid</code>.
	 */
	public String getFid() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.groupName</code>.
	 */
	public void setGroupname(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.groupName</code>.
	 */
	public String getGroupname() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.fileName</code>.
	 */
	public void setFilename(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.fileName</code>.
	 */
	public String getFilename() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.extensionsName</code>.
	 */
	public void setExtensionsname(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.extensionsName</code>.
	 */
	public String getExtensionsname() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.createTime</code>.
	 */
	public void setCreatetime(Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.createTime</code>.
	 */
	public Timestamp getCreatetime() {
		return (Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.updateTime</code>.
	 */
	public void setUpdatetime(Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.updateTime</code>.
	 */
	public Timestamp getUpdatetime() {
		return (Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.httpEncoding</code>.
	 */
	public void setHttpencoding(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.httpEncoding</code>.
	 */
	public String getHttpencoding() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.fsRawValue</code>.
	 */
	public void setFsrawvalue(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.fsRawValue</code>.
	 */
	public String getFsrawvalue() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.path</code>.
	 */
	public void setPath(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.path</code>.
	 */
	public String getPath() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>ecm.fastdfs_fileRecord.mimeType</code>.
	 */
	public void setMimetype(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>ecm.fastdfs_fileRecord.mimeType</code>.
	 */
	public String getMimetype() {
		return (String) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<String, String, String, String, String, Timestamp, Timestamp, String, String, String, String> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<String, String, String, String, String, Timestamp, Timestamp, String, String, String, String> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.GLOBALID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.FID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.GROUPNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.FILENAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.EXTENSIONSNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.CREATETIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.UPDATETIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.HTTPENCODING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.FSRAWVALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.PATH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return FastdfsFilerecord.FASTDFS_FILERECORD.MIMETYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getGlobalid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getGroupname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getFilename();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getExtensionsname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6() {
		return getCreatetime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getUpdatetime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getHttpencoding();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getFsrawvalue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getPath();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getMimetype();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value1(String value) {
		setGlobalid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value2(String value) {
		setFid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value3(String value) {
		setGroupname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value4(String value) {
		setFilename(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value5(String value) {
		setExtensionsname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value6(Timestamp value) {
		setCreatetime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value7(Timestamp value) {
		setUpdatetime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value8(String value) {
		setHttpencoding(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value9(String value) {
		setFsrawvalue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value10(String value) {
		setPath(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord value11(String value) {
		setMimetype(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FastdfsFilerecordRecord values(String value1, String value2, String value3, String value4, String value5, Timestamp value6, Timestamp value7, String value8, String value9, String value10, String value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FastdfsFilerecordRecord
	 */
	public FastdfsFilerecordRecord() {
		super(FastdfsFilerecord.FASTDFS_FILERECORD);
	}

	/**
	 * Create a detached, initialised FastdfsFilerecordRecord
	 */
	public FastdfsFilerecordRecord(String globalid, String fid, String groupname, String filename, String extensionsname, Timestamp createtime, Timestamp updatetime, String httpencoding, String fsrawvalue, String path, String mimetype) {
		super(FastdfsFilerecord.FASTDFS_FILERECORD);

		setValue(0, globalid);
		setValue(1, fid);
		setValue(2, groupname);
		setValue(3, filename);
		setValue(4, extensionsname);
		setValue(5, createtime);
		setValue(6, updatetime);
		setValue(7, httpencoding);
		setValue(8, fsrawvalue);
		setValue(9, path);
		setValue(10, mimetype);
	}
}
