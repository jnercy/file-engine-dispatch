/**
 * This class is generated by jOOQ
 */
package com.nextcont.ecm.fileengine.persistence.jooq.tables;


import com.nextcont.ecm.fileengine.persistence.jooq.Ecm;
import com.nextcont.ecm.fileengine.persistence.jooq.Keys;
import com.nextcont.ecm.fileengine.persistence.jooq.tables.records.TransitionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transition extends TableImpl<TransitionRecord> {

	private static final long serialVersionUID = -1464265763;

	/**
	 * The reference instance of <code>ecm.transition</code>
	 */
	public static final Transition TRANSITION = new Transition();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TransitionRecord> getRecordType() {
		return TransitionRecord.class;
	}

	/**
	 * The column <code>ecm.transition.globalId</code>. 请求id
	 */
	public final TableField<TransitionRecord, String> GLOBALID = createField("globalId", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "请求id");

	/**
	 * The column <code>ecm.transition.createdate</code>. 创建时间
	 */
	public final TableField<TransitionRecord, Timestamp> CREATEDATE = createField("createdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>ecm.transition.requesttype</code>. 请求类型:HTTP|WEBSOCKET
	 */
	public final TableField<TransitionRecord, String> REQUESTTYPE = createField("requesttype", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "请求类型:HTTP|WEBSOCKET");

	/**
	 * The column <code>ecm.transition.clientid</code>. caller client id
	 */
	public final TableField<TransitionRecord, String> CLIENTID = createField("clientid", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "caller client id");

	/**
	 * The column <code>ecm.transition.filename</code>. 文件名称
	 */
	public final TableField<TransitionRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "文件名称");

	/**
	 * The column <code>ecm.transition.length</code>. 文件长度
	 */
	public final TableField<TransitionRecord, Long> LENGTH = createField("length", org.jooq.impl.SQLDataType.BIGINT, this, "文件长度");

	/**
	 * The column <code>ecm.transition.mimetype</code>. 文件mime-type
	 */
	public final TableField<TransitionRecord, String> MIMETYPE = createField("mimetype", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "文件mime-type");

	/**
	 * The column <code>ecm.transition.source</code>. 文件来源:HTTP URL|FTP|FILE UPLOAD|CHUNCKED FILE UPLOAD
	 */
	public final TableField<TransitionRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "文件来源:HTTP URL|FTP|FILE UPLOAD|CHUNCKED FILE UPLOAD");

	/**
	 * The column <code>ecm.transition.callbackurl</code>. 回调URL
	 */
	public final TableField<TransitionRecord, String> CALLBACKURL = createField("callbackurl", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "回调URL");

	/**
	 * The column <code>ecm.transition.md5digest</code>. 文件的md5摘要
	 */
	public final TableField<TransitionRecord, String> MD5DIGEST = createField("md5digest", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "文件的md5摘要");

	/**
	 * The column <code>ecm.transition.alijobid</code>. 阿里转码jobid
	 */
	public final TableField<TransitionRecord, String> ALIJOBID = createField("alijobid", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "阿里转码jobid");

	/**
	 * The column <code>ecm.transition.filesize</code>.
	 */
	public final TableField<TransitionRecord, Integer> FILESIZE = createField("filesize", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>ecm.transition</code> table reference
	 */
	public Transition() {
		this("transition", null);
	}

	/**
	 * Create an aliased <code>ecm.transition</code> table reference
	 */
	public Transition(String alias) {
		this(alias, TRANSITION);
	}

	private Transition(String alias, Table<TransitionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Transition(String alias, Table<TransitionRecord> aliased, Field<?>[] parameters) {
		super(alias, Ecm.ECM, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TransitionRecord> getPrimaryKey() {
		return Keys.KEY_TRANSITION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TransitionRecord>> getKeys() {
		return Arrays.<UniqueKey<TransitionRecord>>asList(Keys.KEY_TRANSITION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Transition as(String alias) {
		return new Transition(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Transition rename(String name) {
		return new Transition(name, null);
	}
}
